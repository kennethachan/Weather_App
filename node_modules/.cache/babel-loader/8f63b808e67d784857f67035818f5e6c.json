{"remainingRequest":"/Users/kennethchan/Desktop/GA/Weather_App/node_modules/babel-loader/lib/index.js!/Users/kennethchan/Desktop/GA/Weather_App/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/kennethchan/Desktop/GA/Weather_App/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kennethchan/Desktop/GA/Weather_App/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kennethchan/Desktop/GA/Weather_App/src/App.vue","mtime":1661562076928},{"path":"/Users/kennethchan/Desktop/GA/Weather_App/babel.config.js","mtime":1661482824074},{"path":"/Users/kennethchan/Desktop/GA/Weather_App/node_modules/cache-loader/dist/cjs.js","mtime":1661482853641},{"path":"/Users/kennethchan/Desktop/GA/Weather_App/node_modules/babel-loader/lib/index.js","mtime":1661482854905},{"path":"/Users/kennethchan/Desktop/GA/Weather_App/node_modules/cache-loader/dist/cjs.js","mtime":1661482853641},{"path":"/Users/kennethchan/Desktop/GA/Weather_App/node_modules/vue-loader/lib/index.js","mtime":1661482856305}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IFdlYXRoZXJEYXNoIGZyb20gJy4vY29tcG9uZW50cy9XZWF0aGVyRGFzaC52dWUnOwppbXBvcnQgV2Vla2x5Rm9yZWNhc3QgZnJvbSAnLi9jb21wb25lbnRzL1dlZWtseUZvcmVjYXN0LnZ1ZSc7CmNvbnN0IEFQSV9LRVkgPSAiNjZkZmM4YjU4YTQzN2ZlNmM0ZWM3OTEwOTU2ZTI2ZjUiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0FwcCcsCiAgY29tcG9uZW50czogewogICAgV2VhdGhlckRhc2gsCiAgICBXZWVrbHlGb3JlY2FzdAogIH0sCiAgZGF0YTogKCkgPT4gKHsKICAgIGRhaWx5V2VhdGhlcjogW10sCiAgICBjdXJyZW50V2VhdGhlcjogbnVsbCwKICAgIHRpbWV6b25lOiBbXQogIH0pLAogIG1vdW50ZWQ6IGZ1bmN0aW9uICgpIHsKICAgIG5hdmlnYXRvci5nZW9sb2NhdGlvbi5nZXRDdXJyZW50UG9zaXRpb24oYXN5bmMgcG9zaXRpb24gPT4gewogICAgICBhd2FpdCB0aGlzLmdldEN1cnJlbnRXZWF0aGVyKHBvc2l0aW9uLmNvb3Jkcyk7CiAgICB9KTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIGdldEN1cnJlbnRXZWF0aGVyKGNvb3JkcykgewogICAgICBjb25zdCByZXMgPSBhd2FpdCBheGlvcy5nZXQoYGh0dHBzOi8vYXBpLm9wZW53ZWF0aGVybWFwLm9yZy9kYXRhLzIuNS9vbmVjYWxsP2xhdD0ke2Nvb3Jkcy5sYXRpdHVkZX0mbG9uPSR7Y29vcmRzLmxvbmdpdHVkZX0mdW5pdHM9aW1wZXJpYWwmYXBwaWQ9JHtBUElfS0VZfWApOwogICAgICB0aGlzLmN1cnJlbnRXZWF0aGVyID0gcmVzLmRhdGEuY3VycmVudDsKICAgICAgdGhpcy50aW1lem9uZSA9IHJlcy5kYXRhOwogICAgICByZXMuZGF0YS5kYWlseS5zcGxpY2UoMCwgMSk7CiAgICAgIHRoaXMuZGFpbHlXZWF0aGVyID0gcmVzLmRhdGEuZGFpbHk7CiAgICB9CgogIH0KfTs="},{"version":3,"mappings":"AAcA;AACA;AACA;AACA;AACA;EACAA,WADA;EAEAC;IACAC,WADA;IAEAC;EAFA,CAFA;EAMAC;IACAC,gBADA;IAEAC,oBAFA;IAGAC;EAHA,EANA;EAWAC;IACAC;MACA;IACA,CAFA;EAGA,CAfA;EAgBAC;IACA;MACA;MACA;MACA;MACAC;MACA;IACA;;EAPA;AAhBA","names":["name","components","WeatherDash","WeeklyForecast","data","dailyWeather","currentWeather","timezone","mounted","navigator","methods","res"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <p class=\"timezone\"><span class=\"bold\">Where am I ?:</span><span class=\"where bold\">\n      {{timezone.timezone}}\n    </span></p>\n    <WeatherDash v-if=\"currentWeather\" :currentWeather=\"currentWeather\" />\n    <WeeklyForecast v-if=\"currentWeather\" :dailyWeather=\"dailyWeather\" :currentWeather=\"currentWeather\" />\n    <div v-else>\n      <h3 class=\"no-weather\">Loading...</h3>\n    </div>\n  </div>\n</template>\n\n<script>\n  import axios from 'axios'\n  import WeatherDash from './components/WeatherDash.vue'\n  import WeeklyForecast from './components/WeeklyForecast.vue'\nconst API_KEY = \"66dfc8b58a437fe6c4ec7910956e26f5\"\n  export default {\n    name: 'App',\n    components: {\n      WeatherDash,\n      WeeklyForecast\n    },\n    data: () => ({\n      dailyWeather: [],\n      currentWeather: null,\n      timezone:[]\n    }),\n    mounted: function() {\n      navigator.geolocation.getCurrentPosition(async (position) => {\n        await this.getCurrentWeather(position.coords)\n      })\n    },\n    methods: {\n      async getCurrentWeather(coords){\n        const res = await axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${coords.latitude}&lon=${coords.longitude}&units=imperial&appid=${API_KEY}`)\n        this.currentWeather = res.data.current\n        this.timezone = res.data\n        res.data.daily.splice(0,1)\n        this.dailyWeather = res.data.daily\n      }\n    }\n  }\n</script>\n\n<style>\n  #app {\n    font-family: Avenir, Helvetica, Arial, sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    text-align: center;\n    color: #2c3e50;\n    margin-top: 60px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  html{\n      background-color: #82A6BE;\n  }\n\n  .timezone {\n    text-align: right;\n       color: #B13E19;\n    position: relative;\n  }\n\n  .where {\n    color: #F0E6CE;\n    font-weight: 400;\n  }\n\n  .no-weather {\n     color: #B13E19;\n  }\n\n  .heading {\n    color: #17539C;\n  }\n\n</style>\n\n"]}]}