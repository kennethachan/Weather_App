{"remainingRequest":"/Users/kennethchan/Desktop/GA/Weather_App/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kennethchan/Desktop/GA/Weather_App/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kennethchan/Desktop/GA/Weather_App/src/App.vue","mtime":1661482824079},{"path":"/Users/kennethchan/Desktop/GA/Weather_App/node_modules/cache-loader/dist/cjs.js","mtime":1661482853641},{"path":"/Users/kennethchan/Desktop/GA/Weather_App/node_modules/babel-loader/lib/index.js","mtime":1661482854905},{"path":"/Users/kennethchan/Desktop/GA/Weather_App/node_modules/cache-loader/dist/cjs.js","mtime":1661482853641},{"path":"/Users/kennethchan/Desktop/GA/Weather_App/node_modules/vue-loader/lib/index.js","mtime":1661482856305}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJwogIGltcG9ydCBXZWF0aGVyRGFzaCBmcm9tICcuL2NvbXBvbmVudHMvV2VhdGhlckRhc2gudnVlJwogIGltcG9ydCBXZWVrbHlGb3JlY2FzdCBmcm9tICcuL2NvbXBvbmVudHMvV2Vla2x5Rm9yZWNhc3QudnVlJwpjb25zdCBBUElfS0VZID0gIjY2ZGZjOGI1OGE0MzdmZTZjNGVjNzkxMDk1NmUyNmY1IgogIGV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdBcHAnLAogICAgY29tcG9uZW50czogewogICAgICBXZWF0aGVyRGFzaCwKICAgICAgV2Vla2x5Rm9yZWNhc3QKICAgIH0sCiAgICBkYXRhOiAoKSA9PiAoewogICAgICBkYWlseVdlYXRoZXI6IFtdLAogICAgICBjdXJyZW50V2VhdGhlcjogbnVsbAogICAgfSksCiAgICBtb3VudGVkOiBmdW5jdGlvbigpIHsKICAgICAgbmF2aWdhdG9yLmdlb2xvY2F0aW9uLmdldEN1cnJlbnRQb3NpdGlvbihhc3luYyAocG9zaXRpb24pID0+IHsKICAgICAgICBhd2FpdCB0aGlzLmdldEN1cnJlbnRXZWF0aGVyKHBvc2l0aW9uLmNvb3JkcykKICAgICAgfSkKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgIGFzeW5jIGdldEN1cnJlbnRXZWF0aGVyKGNvb3Jkcyl7CiAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgYXhpb3MuZ2V0KGBodHRwczovL2FwaS5vcGVud2VhdGhlcm1hcC5vcmcvZGF0YS8yLjUvb25lY2FsbD9sYXQ9JHtjb29yZHMubGF0aXR1ZGV9Jmxvbj0ke2Nvb3Jkcy5sb25naXR1ZGV9JnVuaXRzPWltcGVyaWFsJmFwcGlkPSR7QVBJX0tFWX1gKQogICAgICAgIHRoaXMuY3VycmVudFdlYXRoZXIgPSByZXMuZGF0YS5jdXJyZW50CiAgICAgICAgcmVzLmRhdGEuZGFpbHkuc3BsaWNlKDAsMSkKICAgICAgICB0aGlzLmRhaWx5V2VhdGhlciA9IHJlcy5kYXRhLmRhaWx5CiAgICAgIH0KICAgIH0KICB9Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <WeatherDash v-if=\"currentWeather\" :currentWeather=\"currentWeather\" />\n    <WeeklyForecast v-if=\"currentWeather\" :dailyWeather=\"dailyWeather\" :currentWeather=\"currentWeather\" />\n    <div v-else>\n      <h3>No Weather</h3>\n    </div>\n  </div>\n</template>\n\n<script>\n  import axios from 'axios'\n  import WeatherDash from './components/WeatherDash.vue'\n  import WeeklyForecast from './components/WeeklyForecast.vue'\nconst API_KEY = \"66dfc8b58a437fe6c4ec7910956e26f5\"\n  export default {\n    name: 'App',\n    components: {\n      WeatherDash,\n      WeeklyForecast\n    },\n    data: () => ({\n      dailyWeather: [],\n      currentWeather: null\n    }),\n    mounted: function() {\n      navigator.geolocation.getCurrentPosition(async (position) => {\n        await this.getCurrentWeather(position.coords)\n      })\n    },\n    methods: {\n      async getCurrentWeather(coords){\n        const res = await axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${coords.latitude}&lon=${coords.longitude}&units=imperial&appid=${API_KEY}`)\n        this.currentWeather = res.data.current\n        res.data.daily.splice(0,1)\n        this.dailyWeather = res.data.daily\n      }\n    }\n  }\n</script>\n\n<style>\n  #app {\n    font-family: Avenir, Helvetica, Arial, sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    text-align: center;\n    color: #2c3e50;\n    margin-top: 60px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  html{\n      background-color: #E4BCA4;\n  }\n</style>"]}]}