{"remainingRequest":"/Users/kennethchan/Desktop/GA/Weather_App/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kennethchan/Desktop/GA/Weather_App/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kennethchan/Desktop/GA/Weather_App/src/App.vue","mtime":1661517999679},{"path":"/Users/kennethchan/Desktop/GA/Weather_App/node_modules/cache-loader/dist/cjs.js","mtime":1661482853641},{"path":"/Users/kennethchan/Desktop/GA/Weather_App/node_modules/babel-loader/lib/index.js","mtime":1661482854905},{"path":"/Users/kennethchan/Desktop/GA/Weather_App/node_modules/cache-loader/dist/cjs.js","mtime":1661482853641},{"path":"/Users/kennethchan/Desktop/GA/Weather_App/node_modules/vue-loader/lib/index.js","mtime":1661482856305}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJwogIGltcG9ydCBXZWF0aGVyRGFzaCBmcm9tICcuL2NvbXBvbmVudHMvV2VhdGhlckRhc2gudnVlJwogIGltcG9ydCBXZWVrbHlGb3JlY2FzdCBmcm9tICcuL2NvbXBvbmVudHMvV2Vla2x5Rm9yZWNhc3QudnVlJwpjb25zdCBBUElfS0VZID0gIjY2ZGZjOGI1OGE0MzdmZTZjNGVjNzkxMDk1NmUyNmY1IgogIGV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdBcHAnLAogICAgY29tcG9uZW50czogewogICAgICBXZWF0aGVyRGFzaCwKICAgICAgV2Vla2x5Rm9yZWNhc3QKICAgIH0sCiAgICBkYXRhOiAoKSA9PiAoewogICAgICBkYWlseVdlYXRoZXI6IFtdLAogICAgICBjdXJyZW50V2VhdGhlcjogbnVsbCwKICAgICAgdGltZXpvbmU6W10KICAgIH0pLAogICAgbW91bnRlZDogZnVuY3Rpb24oKSB7CiAgICAgIG5hdmlnYXRvci5nZW9sb2NhdGlvbi5nZXRDdXJyZW50UG9zaXRpb24oYXN5bmMgKHBvc2l0aW9uKSA9PiB7CiAgICAgICAgYXdhaXQgdGhpcy5nZXRDdXJyZW50V2VhdGhlcihwb3NpdGlvbi5jb29yZHMpCiAgICAgIH0pCiAgICB9LAogICAgbWV0aG9kczogewogICAgICBhc3luYyBnZXRDdXJyZW50V2VhdGhlcihjb29yZHMpewogICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGF4aW9zLmdldChgaHR0cHM6Ly9hcGkub3BlbndlYXRoZXJtYXAub3JnL2RhdGEvMi41L29uZWNhbGw/bGF0PSR7Y29vcmRzLmxhdGl0dWRlfSZsb249JHtjb29yZHMubG9uZ2l0dWRlfSZ1bml0cz1pbXBlcmlhbCZhcHBpZD0ke0FQSV9LRVl9YCkKICAgICAgICB0aGlzLmN1cnJlbnRXZWF0aGVyID0gcmVzLmRhdGEuY3VycmVudAogICAgICAgIHRoaXMudGltZXpvbmUgPSByZXMuZGF0YQogICAgICAgIHJlcy5kYXRhLmRhaWx5LnNwbGljZSgwLDEpCiAgICAgICAgdGhpcy5kYWlseVdlYXRoZXIgPSByZXMuZGF0YS5kYWlseQogICAgICB9CiAgICB9CiAgfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <p class=\"timezone\"><span class=\"bold\">Where am I ?:</span><span class=\"where bold\">\n      {{timezone.timezone}}\n    </span></p>\n    <WeatherDash v-if=\"currentWeather\" :currentWeather=\"currentWeather\" />\n    <WeeklyForecast v-if=\"currentWeather\" :dailyWeather=\"dailyWeather\" :currentWeather=\"currentWeather\" />\n    <div v-else>\n      <h3 class=\"no-weather\">No Weather</h3>\n    </div>\n  </div>\n</template>\n\n<script>\n  import axios from 'axios'\n  import WeatherDash from './components/WeatherDash.vue'\n  import WeeklyForecast from './components/WeeklyForecast.vue'\nconst API_KEY = \"66dfc8b58a437fe6c4ec7910956e26f5\"\n  export default {\n    name: 'App',\n    components: {\n      WeatherDash,\n      WeeklyForecast\n    },\n    data: () => ({\n      dailyWeather: [],\n      currentWeather: null,\n      timezone:[]\n    }),\n    mounted: function() {\n      navigator.geolocation.getCurrentPosition(async (position) => {\n        await this.getCurrentWeather(position.coords)\n      })\n    },\n    methods: {\n      async getCurrentWeather(coords){\n        const res = await axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${coords.latitude}&lon=${coords.longitude}&units=imperial&appid=${API_KEY}`)\n        this.currentWeather = res.data.current\n        this.timezone = res.data\n        res.data.daily.splice(0,1)\n        this.dailyWeather = res.data.daily\n      }\n    }\n  }\n</script>\n\n<style>\n  #app {\n    font-family: Avenir, Helvetica, Arial, sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    text-align: center;\n    color: #2c3e50;\n    margin-top: 60px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  html{\n      background-color: #E4BCA4;\n  }\n\n  .timezone {\n    text-align: right;\n    color: red;\n    position: relative;\n  }\n\n  .where {\n    color: #17539C;\n  }\n\n  .no-weather {\n    color: red;\n  }\n\n  .heading {\n    color: #17539C;\n  }\n\n</style>\n\n"]}]}